// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ChargebackReasonCode - Bolt's [standardized reason codes](https://help.bolt.com/merchants/references/policies/disputes/dispute-codes/).
type ChargebackReasonCode string

const (
	ChargebackReasonCodeAuthorizationFailed   ChargebackReasonCode = "authorization_failed"
	ChargebackReasonCodeCancelledRecurring    ChargebackReasonCode = "cancelled_recurring"
	ChargebackReasonCodeCardholderDispute     ChargebackReasonCode = "cardholder_dispute"
	ChargebackReasonCodeCurrencyError         ChargebackReasonCode = "currency_error"
	ChargebackReasonCodeDuplicate             ChargebackReasonCode = "duplicate"
	ChargebackReasonCodeFraudGeneral          ChargebackReasonCode = "fraud_general"
	ChargebackReasonCodeFraudNoAuthorization  ChargebackReasonCode = "fraud_no_authorization"
	ChargebackReasonCodeIncorrectAmount       ChargebackReasonCode = "incorrect_amount"
	ChargebackReasonCodeLatePresentment       ChargebackReasonCode = "late_presentment"
	ChargebackReasonCodeProcessingError       ChargebackReasonCode = "processing_error"
	ChargebackReasonCodeProcessorGeneral      ChargebackReasonCode = "processor_general"
	ChargebackReasonCodeProductDefective      ChargebackReasonCode = "product_defective"
	ChargebackReasonCodeProductNotReceived    ChargebackReasonCode = "product_not_received"
	ChargebackReasonCodeProductReturned       ChargebackReasonCode = "product_returned"
	ChargebackReasonCodeRequestForInformation ChargebackReasonCode = "request_for_information"
)

func (e ChargebackReasonCode) ToPointer() *ChargebackReasonCode {
	return &e
}

func (e *ChargebackReasonCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "authorization_failed":
		fallthrough
	case "cancelled_recurring":
		fallthrough
	case "cardholder_dispute":
		fallthrough
	case "currency_error":
		fallthrough
	case "duplicate":
		fallthrough
	case "fraud_general":
		fallthrough
	case "fraud_no_authorization":
		fallthrough
	case "incorrect_amount":
		fallthrough
	case "late_presentment":
		fallthrough
	case "processing_error":
		fallthrough
	case "processor_general":
		fallthrough
	case "product_defective":
		fallthrough
	case "product_not_received":
		fallthrough
	case "product_returned":
		fallthrough
	case "request_for_information":
		*e = ChargebackReasonCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChargebackReasonCode: %v", v)
	}
}
