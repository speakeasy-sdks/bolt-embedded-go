// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/bolt-embedded-go/pkg/utils"
)

type OAuthTokenInputRefresh struct {
	// Merchant publishable key which can be found in the merchant dashboard
	ClientID string `form:"name=client_id"`
	// Your Bolt API Key.
	ClientSecret string `form:"name=client_secret"`
	// The type of OAuth 2.0 grant being utilized.
	//
	// The value will always be `refresh_token` when exchanging a refresh token for an access token.
	//
	grantType string `const:"refresh_token" form:"name=grant_type"`
	// The value of the refresh token issued to you in the originating OAuth token request.
	RefreshToken string `form:"name=refresh_token"`
	// The scope issued to the merchant when receiving an authorization code. Options include `bolt.account.manage`, `bolt.account.view`, `openid`.
	Scope string `form:"name=scope"`
	// A randomly generated string issued to the merchant when receiving an authorization code used to prevent CSRF attacks
	State *string `form:"name=state"`
}

func (o OAuthTokenInputRefresh) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OAuthTokenInputRefresh) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *OAuthTokenInputRefresh) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *OAuthTokenInputRefresh) GetClientSecret() string {
	if o == nil {
		return ""
	}
	return o.ClientSecret
}

func (o *OAuthTokenInputRefresh) GetGrantType() string {
	return "refresh_token"
}

func (o *OAuthTokenInputRefresh) GetRefreshToken() string {
	if o == nil {
		return ""
	}
	return o.RefreshToken
}

func (o *OAuthTokenInputRefresh) GetScope() string {
	if o == nil {
		return ""
	}
	return o.Scope
}

func (o *OAuthTokenInputRefresh) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}
