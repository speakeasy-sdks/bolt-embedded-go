// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type MerchantDivision struct {
	// The URL provided by the merchant for the account page.
	AccountPageURL   *string `json:"account_page_url,omitempty"`
	APIBaseDomainURL *string `json:"api_base_domain_url,omitempty"`
	// The endpoint URL provided by the merchant to Bolt for creating orders. **Nullable** for Transactions Details.
	CreateOrderURL *string `json:"create_order_url,omitempty"`
	// The endpoint URL provided by the merchant for debugging.
	DebugURL *string `json:"debug_url,omitempty"`
	// The description of the merchant division. **Nullable** for Transactions Details.
	Description string `json:"description"`
	// The endpoint URL provided by the merchant to fetch accounts.
	GetAccountURL *string `json:"get_account_url,omitempty"`
	// [Webhook events](https://help.bolt.com/developers/guides/webhooks/#transaction-hook-types) that trigger a notification to the URL.  **Note**:`newsletter_subscription` is only for merchant use cases.
	//
	HookType *WebhooksType `json:"hook_type,omitempty"`
	// The endpoint URL provided by the merchant to send webhooks.
	HookURL *string `json:"hook_url,omitempty"`
	// The unique ID associated to the merchant's Bolt Account division; Merchants can have different divisions to suit multiple use cases (storefronts, pay-by-link, phone order processing). You can view and switch between these divisions from the Bolt Merchant Dashboard.
	ID *string `json:"id,omitempty"`
	// Defines whether or not the Universal API method is in use. **Nullable** for Transactions Details.
	IsUniversalMerchantAPI bool `json:"is_universal_merchant_api"`
	// Defines whether or not the second version of Bolt's webhooks is in use. **Nullable** for Transactions Details.
	IsWebhooksV2 bool          `json:"is_webhooks_v2"`
	Logo         *MerchantLogo `json:"logo,omitempty"`
	// The unique ID for the merchant's Bolt account. A merchant account contains many merchant divisions. **Nullable** for Transactions Details.
	MerchantID string `json:"merchant_id"`
	// The endpoint URL provided by the merchant for logging out of OAuth accounts.
	OauthLogoutURL *string `json:"oauth_logout_url,omitempty"`
	// The endpoint URL provided by the merchant for OAuth redirects.
	OauthRedirectURL *string `json:"oauth_redirect_url,omitempty"`
	// The type of platform being used for this merchant division.
	Platform *MerchantPlatform `json:"platform,omitempty"`
	// The endpoint URL provided by the merchant for checking plugin configuration details.
	PluginConfigURL *string `json:"plugin_config_url,omitempty"`
	// The endpoint URL provided by the merchant for providing a unique privacy policy.
	PrivacyPolicyURL *string `json:"privacy_policy_url,omitempty"`
	// The endpoint URL provided by the merchant for checking product details.
	ProductInfoURL *string `json:"product_info_url,omitempty"`
	// The unique public ID for one of the merchant's store division.
	PublicID *string `json:"public_id,omitempty"`
	// The endpoint URL provided by the merchant to Bolt for shipping and tax calculations.
	ShippingAndTaxURL *string `json:"shipping_and_tax_url,omitempty"`
	// The endpoint URL provided by the merchant to Bolt for shipping calculations. **Nullable** for Transactions Details.
	ShippingURL string `json:"shipping_url"`
	// The endpoint URL provided by the merchant to Bolt for tax calculations. **Nullable** for Transactions Details.
	TaxURL string `json:"tax_url"`
	// The endpoint URL provided by the merchant for providing unique terms of service.
	TermsOfServiceURL *string `json:"terms_of_service_url,omitempty"`
	// The endpoint URL provided by the merchant to access their universal API.
	UniversalMerchantAPIURL *string `json:"universal_merchant_api_url,omitempty"`
	// The endpoint URL provided by the merchant to Bolt to pass cart updates.
	UpdateCartURL *string `json:"update_cart_url,omitempty"`
	// The endpoint URL provided by the merchant for validating additional account data.
	ValidateAdditionalAccountDataURL *string `json:"validate_additional_account_data_url,omitempty"`
}

func (o *MerchantDivision) GetAccountPageURL() *string {
	if o == nil {
		return nil
	}
	return o.AccountPageURL
}

func (o *MerchantDivision) GetAPIBaseDomainURL() *string {
	if o == nil {
		return nil
	}
	return o.APIBaseDomainURL
}

func (o *MerchantDivision) GetCreateOrderURL() *string {
	if o == nil {
		return nil
	}
	return o.CreateOrderURL
}

func (o *MerchantDivision) GetDebugURL() *string {
	if o == nil {
		return nil
	}
	return o.DebugURL
}

func (o *MerchantDivision) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *MerchantDivision) GetGetAccountURL() *string {
	if o == nil {
		return nil
	}
	return o.GetAccountURL
}

func (o *MerchantDivision) GetHookType() *WebhooksType {
	if o == nil {
		return nil
	}
	return o.HookType
}

func (o *MerchantDivision) GetHookURL() *string {
	if o == nil {
		return nil
	}
	return o.HookURL
}

func (o *MerchantDivision) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MerchantDivision) GetIsUniversalMerchantAPI() bool {
	if o == nil {
		return false
	}
	return o.IsUniversalMerchantAPI
}

func (o *MerchantDivision) GetIsWebhooksV2() bool {
	if o == nil {
		return false
	}
	return o.IsWebhooksV2
}

func (o *MerchantDivision) GetLogo() *MerchantLogo {
	if o == nil {
		return nil
	}
	return o.Logo
}

func (o *MerchantDivision) GetMerchantID() string {
	if o == nil {
		return ""
	}
	return o.MerchantID
}

func (o *MerchantDivision) GetOauthLogoutURL() *string {
	if o == nil {
		return nil
	}
	return o.OauthLogoutURL
}

func (o *MerchantDivision) GetOauthRedirectURL() *string {
	if o == nil {
		return nil
	}
	return o.OauthRedirectURL
}

func (o *MerchantDivision) GetPlatform() *MerchantPlatform {
	if o == nil {
		return nil
	}
	return o.Platform
}

func (o *MerchantDivision) GetPluginConfigURL() *string {
	if o == nil {
		return nil
	}
	return o.PluginConfigURL
}

func (o *MerchantDivision) GetPrivacyPolicyURL() *string {
	if o == nil {
		return nil
	}
	return o.PrivacyPolicyURL
}

func (o *MerchantDivision) GetProductInfoURL() *string {
	if o == nil {
		return nil
	}
	return o.ProductInfoURL
}

func (o *MerchantDivision) GetPublicID() *string {
	if o == nil {
		return nil
	}
	return o.PublicID
}

func (o *MerchantDivision) GetShippingAndTaxURL() *string {
	if o == nil {
		return nil
	}
	return o.ShippingAndTaxURL
}

func (o *MerchantDivision) GetShippingURL() string {
	if o == nil {
		return ""
	}
	return o.ShippingURL
}

func (o *MerchantDivision) GetTaxURL() string {
	if o == nil {
		return ""
	}
	return o.TaxURL
}

func (o *MerchantDivision) GetTermsOfServiceURL() *string {
	if o == nil {
		return nil
	}
	return o.TermsOfServiceURL
}

func (o *MerchantDivision) GetUniversalMerchantAPIURL() *string {
	if o == nil {
		return nil
	}
	return o.UniversalMerchantAPIURL
}

func (o *MerchantDivision) GetUpdateCartURL() *string {
	if o == nil {
		return nil
	}
	return o.UpdateCartURL
}

func (o *MerchantDivision) GetValidateAdditionalAccountDataURL() *string {
	if o == nil {
		return nil
	}
	return o.ValidateAdditionalAccountDataURL
}
