// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PhoneViewPriority string

const (
	PhoneViewPriorityPrimary PhoneViewPriority = "primary"
	PhoneViewPriorityListed  PhoneViewPriority = "listed"
)

func (e PhoneViewPriority) ToPointer() *PhoneViewPriority {
	return &e
}

func (e *PhoneViewPriority) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "primary":
		fallthrough
	case "listed":
		*e = PhoneViewPriority(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneViewPriority: %v", v)
	}
}

type PhoneView struct {
	// Used for the 2-digit ISO 3166-1 alpha 2 country code associated with this address.
	CountryCode *string            `json:"country_code,omitempty"`
	ID          *string            `json:"id,omitempty"`
	Number      *string            `json:"number,omitempty"`
	Priority    *PhoneViewPriority `json:"priority,omitempty"`
	Status      *string            `json:"status,omitempty"`
}

func (o *PhoneView) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *PhoneView) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PhoneView) GetNumber() *string {
	if o == nil {
		return nil
	}
	return o.Number
}

func (o *PhoneView) GetPriority() *PhoneViewPriority {
	if o == nil {
		return nil
	}
	return o.Priority
}

func (o *PhoneView) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}
