// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CartDiscountDiscountCategory string

const (
	CartDiscountDiscountCategoryCoupon               CartDiscountDiscountCategory = "coupon"
	CartDiscountDiscountCategoryGiftcard             CartDiscountDiscountCategory = "giftcard"
	CartDiscountDiscountCategoryManagedGiftcard      CartDiscountDiscountCategory = "managed_giftcard"
	CartDiscountDiscountCategoryStoreCredit          CartDiscountDiscountCategory = "store_credit"
	CartDiscountDiscountCategoryAutomaticPromotion   CartDiscountDiscountCategory = "automatic_promotion"
	CartDiscountDiscountCategoryMembershipDiscount   CartDiscountDiscountCategory = "membership_discount"
	CartDiscountDiscountCategoryMembershipGiftcard   CartDiscountDiscountCategory = "membership_giftcard"
	CartDiscountDiscountCategorySubscriptionDiscount CartDiscountDiscountCategory = "subscription_discount"
	CartDiscountDiscountCategoryRewardsDiscount      CartDiscountDiscountCategory = "rewards_discount"
	CartDiscountDiscountCategoryUnknown              CartDiscountDiscountCategory = "unknown"
)

func (e CartDiscountDiscountCategory) ToPointer() *CartDiscountDiscountCategory {
	return &e
}

func (e *CartDiscountDiscountCategory) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "coupon":
		fallthrough
	case "giftcard":
		fallthrough
	case "managed_giftcard":
		fallthrough
	case "store_credit":
		fallthrough
	case "automatic_promotion":
		fallthrough
	case "membership_discount":
		fallthrough
	case "membership_giftcard":
		fallthrough
	case "subscription_discount":
		fallthrough
	case "rewards_discount":
		fallthrough
	case "unknown":
		*e = CartDiscountDiscountCategory(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CartDiscountDiscountCategory: %v", v)
	}
}

// CartDiscountType - The type of discount.
type CartDiscountType string

const (
	CartDiscountTypeFixedAmount  CartDiscountType = "fixed_amount"
	CartDiscountTypePercentage   CartDiscountType = "percentage"
	CartDiscountTypeFreeShipping CartDiscountType = "free_shipping"
)

func (e CartDiscountType) ToPointer() *CartDiscountType {
	return &e
}

func (e *CartDiscountType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fixed_amount":
		fallthrough
	case "percentage":
		fallthrough
	case "free_shipping":
		*e = CartDiscountType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CartDiscountType: %v", v)
	}
}

type CartDiscount struct {
	Amount *float64 `json:"amount,omitempty"`
	Code   *string  `json:"code,omitempty"`
	// Used to define the discount offering.
	Description *string `json:"description,omitempty"`
	// Used to provide a link to additional details, such as a landing page, associated with the discount offering.
	DetailsURL       *string                       `json:"details_url,omitempty"`
	DiscountCategory *CartDiscountDiscountCategory `json:"discount_category,omitempty"`
	// Used to define the reference ID associated with the discount available.
	Reference *string `json:"reference,omitempty"`
	// The type of discount.
	Type *CartDiscountType `json:"type,omitempty"`
}

func (o *CartDiscount) GetAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *CartDiscount) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *CartDiscount) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CartDiscount) GetDetailsURL() *string {
	if o == nil {
		return nil
	}
	return o.DetailsURL
}

func (o *CartDiscount) GetDiscountCategory() *CartDiscountDiscountCategory {
	if o == nil {
		return nil
	}
	return o.DiscountCategory
}

func (o *CartDiscount) GetReference() *string {
	if o == nil {
		return nil
	}
	return o.Reference
}

func (o *CartDiscount) GetType() *CartDiscountType {
	if o == nil {
		return nil
	}
	return o.Type
}
