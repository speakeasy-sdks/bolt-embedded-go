// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InStoreShipment2DistanceUnit string

const (
	InStoreShipment2DistanceUnitMile InStoreShipment2DistanceUnit = "mile"
	InStoreShipment2DistanceUnitKm   InStoreShipment2DistanceUnit = "km"
)

func (e InStoreShipment2DistanceUnit) ToPointer() *InStoreShipment2DistanceUnit {
	return &e
}

func (e *InStoreShipment2DistanceUnit) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mile":
		fallthrough
	case "km":
		*e = InStoreShipment2DistanceUnit(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InStoreShipment2DistanceUnit: %v", v)
	}
}

// InStoreShipment2 - A cart that is being prepared for shipment
type InStoreShipment2 struct {
	// The address object returned in the response.
	Address      *AddressView                  `json:"address,omitempty"`
	Distance     *float64                      `json:"distance,omitempty"`
	DistanceUnit *InStoreShipment2DistanceUnit `json:"distance_unit,omitempty"`
	// A cart that is being prepared for shipment
	Shipment  *InStoreShipment `json:"shipment,omitempty"`
	StoreName *string          `json:"store_name,omitempty"`
}

func (o *InStoreShipment2) GetAddress() *AddressView {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *InStoreShipment2) GetDistance() *float64 {
	if o == nil {
		return nil
	}
	return o.Distance
}

func (o *InStoreShipment2) GetDistanceUnit() *InStoreShipment2DistanceUnit {
	if o == nil {
		return nil
	}
	return o.DistanceUnit
}

func (o *InStoreShipment2) GetShipment() *InStoreShipment {
	if o == nil {
		return nil
	}
	return o.Shipment
}

func (o *InStoreShipment2) GetStoreName() *string {
	if o == nil {
		return nil
	}
	return o.StoreName
}
