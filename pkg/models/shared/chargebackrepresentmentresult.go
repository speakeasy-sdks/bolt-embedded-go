// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ChargebackRepresentmentResult - The result of the chargeback representment.
type ChargebackRepresentmentResult string

const (
	ChargebackRepresentmentResultNone ChargebackRepresentmentResult = "none"
	ChargebackRepresentmentResultOpen ChargebackRepresentmentResult = "open"
	ChargebackRepresentmentResultLost ChargebackRepresentmentResult = "lost"
	ChargebackRepresentmentResultWon  ChargebackRepresentmentResult = "won"
)

func (e ChargebackRepresentmentResult) ToPointer() *ChargebackRepresentmentResult {
	return &e
}

func (e *ChargebackRepresentmentResult) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "open":
		fallthrough
	case "lost":
		fallthrough
	case "won":
		*e = ChargebackRepresentmentResult(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChargebackRepresentmentResult: %v", v)
	}
}
