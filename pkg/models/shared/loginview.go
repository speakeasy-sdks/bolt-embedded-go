// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Actions string

const (
	ActionsSetPassword    Actions = "set_password"
	ActionsRotatePassword Actions = "rotate_password"
)

func (e Actions) ToPointer() *Actions {
	return &e
}

func (e *Actions) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "set_password":
		fallthrough
	case "rotate_password":
		*e = Actions(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Actions: %v", v)
	}
}

type Methods string

const (
	MethodsCode           Methods = "code"
	MethodsCodePassword   Methods = "code_password"
	MethodsPassword       Methods = "password"
	MethodsRotatePassword Methods = "rotate_password"
)

func (e Methods) ToPointer() *Methods {
	return &e
}

func (e *Methods) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "code":
		fallthrough
	case "code_password":
		fallthrough
	case "password":
		fallthrough
	case "rotate_password":
		*e = Methods(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Methods: %v", v)
	}
}

type LoginView struct {
	Actions             []Actions `json:"actions,omitempty"`
	Methods             []Methods `json:"methods,omitempty"`
	SsoAuthorizationURL *string   `json:"sso_authorization_url,omitempty"`
}

func (o *LoginView) GetActions() []Actions {
	if o == nil {
		return nil
	}
	return o.Actions
}

func (o *LoginView) GetMethods() []Methods {
	if o == nil {
		return nil
	}
	return o.Methods
}

func (o *LoginView) GetSsoAuthorizationURL() *string {
	if o == nil {
		return nil
	}
	return o.SsoAuthorizationURL
}
