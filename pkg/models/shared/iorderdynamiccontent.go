// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType string

const (
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeAffirm          IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "affirm"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeAfterpay        IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "afterpay"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeAmazonPay       IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "amazon_pay"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeCredova         IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "credova"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeKlarna          IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "klarna"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypePaypal          IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "paypal"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeSezzle          IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "sezzle"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeRadialKlarna    IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "radial_klarna"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeRadialPaypal    IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "radial_paypal"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeAdyenGateway    IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "adyen_gateway"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeAllianceData    IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "alliance_data"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeAuthorizeNet    IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "authorize_net"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeBraintree       IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "braintree"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeCardconnect     IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "cardconnect"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeCheckoutCom     IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "checkout_com"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeCybersource     IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "cybersource"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeFirstData       IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "first_data"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeNmi             IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "nmi"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeOrbital         IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "orbital"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypePaypalPayflow   IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "paypal_payflow"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeRadial          IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "radial"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeRocketgate      IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "rocketgate"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeShopifyPayments IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "shopify_payments"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeStripe          IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "stripe"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeMagentopayment  IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "magentopayment"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeAdyenPayfac     IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "adyen_payfac"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeVantiv          IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "vantiv"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeGooglePay       IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "google_pay"
	IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorTypeBolt            IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType = "bolt"
)

func (e IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType) ToPointer() *IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType {
	return &e
}

func (e *IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "affirm":
		fallthrough
	case "afterpay":
		fallthrough
	case "amazon_pay":
		fallthrough
	case "credova":
		fallthrough
	case "klarna":
		fallthrough
	case "paypal":
		fallthrough
	case "sezzle":
		fallthrough
	case "radial_klarna":
		fallthrough
	case "radial_paypal":
		fallthrough
	case "adyen_gateway":
		fallthrough
	case "alliance_data":
		fallthrough
	case "authorize_net":
		fallthrough
	case "braintree":
		fallthrough
	case "cardconnect":
		fallthrough
	case "checkout_com":
		fallthrough
	case "cybersource":
		fallthrough
	case "first_data":
		fallthrough
	case "nmi":
		fallthrough
	case "orbital":
		fallthrough
	case "paypal_payflow":
		fallthrough
	case "radial":
		fallthrough
	case "rocketgate":
		fallthrough
	case "shopify_payments":
		fallthrough
	case "stripe":
		fallthrough
	case "magentopayment":
		fallthrough
	case "adyen_payfac":
		fallthrough
	case "vantiv":
		fallthrough
	case "google_pay":
		fallthrough
	case "bolt":
		*e = IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType: %v", v)
	}
}

type IOrderDynamicContentEligiblePaymentMethods struct {
	Eligible                 *bool                                                               `json:"eligible,omitempty"`
	TransactionProcessorType *IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType `json:"transaction_processor_type,omitempty"`
}

func (o *IOrderDynamicContentEligiblePaymentMethods) GetEligible() *bool {
	if o == nil {
		return nil
	}
	return o.Eligible
}

func (o *IOrderDynamicContentEligiblePaymentMethods) GetTransactionProcessorType() *IOrderDynamicContentEligiblePaymentMethodsTransactionProcessorType {
	if o == nil {
		return nil
	}
	return o.TransactionProcessorType
}

type IOrderDynamicContentHideApm string

const (
	IOrderDynamicContentHideApmPaypal       IOrderDynamicContentHideApm = "PAYPAL"
	IOrderDynamicContentHideApmAffirm       IOrderDynamicContentHideApm = "AFFIRM"
	IOrderDynamicContentHideApmAfterpay     IOrderDynamicContentHideApm = "AFTERPAY"
	IOrderDynamicContentHideApmAmazonpay    IOrderDynamicContentHideApm = "AMAZONPAY"
	IOrderDynamicContentHideApmKlarna       IOrderDynamicContentHideApm = "KLARNA"
	IOrderDynamicContentHideApmRadialpaypal IOrderDynamicContentHideApm = "RADIALPAYPAL"
	IOrderDynamicContentHideApmSezzle       IOrderDynamicContentHideApm = "SEZZLE"
	IOrderDynamicContentHideApmRadialklarna IOrderDynamicContentHideApm = "RADIALKLARNA"
	IOrderDynamicContentHideApmCredova      IOrderDynamicContentHideApm = "CREDOVA"
	IOrderDynamicContentHideApmGooglepay    IOrderDynamicContentHideApm = "GOOGLEPAY"
)

func (e IOrderDynamicContentHideApm) ToPointer() *IOrderDynamicContentHideApm {
	return &e
}

func (e *IOrderDynamicContentHideApm) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PAYPAL":
		fallthrough
	case "AFFIRM":
		fallthrough
	case "AFTERPAY":
		fallthrough
	case "AMAZONPAY":
		fallthrough
	case "KLARNA":
		fallthrough
	case "RADIALPAYPAL":
		fallthrough
	case "SEZZLE":
		fallthrough
	case "RADIALKLARNA":
		fallthrough
	case "CREDOVA":
		fallthrough
	case "GOOGLEPAY":
		*e = IOrderDynamicContentHideApm(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IOrderDynamicContentHideApm: %v", v)
	}
}

type IOrderDynamicContent struct {
	CustomFields           []ICustomFieldView                           `json:"custom_fields,omitempty"`
	EligiblePaymentMethods []IOrderDynamicContentEligiblePaymentMethods `json:"eligible_payment_methods,omitempty"`
	GiftOptionView         *IGiftOptionView                             `json:"gift_option_view,omitempty"`
	HideApm                []IOrderDynamicContentHideApm                `json:"hide_apm,omitempty"`
	OrderNotice            *string                                      `json:"order_notice,omitempty"`
	PaymentNotice          *string                                      `json:"payment_notice,omitempty"`
	ShippingInfoNotice     *string                                      `json:"shipping_info_notice,omitempty"`
	ShippingNotice         *string                                      `json:"shipping_notice,omitempty"`
}

func (o *IOrderDynamicContent) GetCustomFields() []ICustomFieldView {
	if o == nil {
		return nil
	}
	return o.CustomFields
}

func (o *IOrderDynamicContent) GetEligiblePaymentMethods() []IOrderDynamicContentEligiblePaymentMethods {
	if o == nil {
		return nil
	}
	return o.EligiblePaymentMethods
}

func (o *IOrderDynamicContent) GetGiftOptionView() *IGiftOptionView {
	if o == nil {
		return nil
	}
	return o.GiftOptionView
}

func (o *IOrderDynamicContent) GetHideApm() []IOrderDynamicContentHideApm {
	if o == nil {
		return nil
	}
	return o.HideApm
}

func (o *IOrderDynamicContent) GetOrderNotice() *string {
	if o == nil {
		return nil
	}
	return o.OrderNotice
}

func (o *IOrderDynamicContent) GetPaymentNotice() *string {
	if o == nil {
		return nil
	}
	return o.PaymentNotice
}

func (o *IOrderDynamicContent) GetShippingInfoNotice() *string {
	if o == nil {
		return nil
	}
	return o.ShippingInfoNotice
}

func (o *IOrderDynamicContent) GetShippingNotice() *string {
	if o == nil {
		return nil
	}
	return o.ShippingNotice
}
