// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// AddressAccount - The Address object is used for billing, shipping, and physical store address use cases.
type AddressAccount struct {
	// The company name associated with this address.
	Company *string `json:"company,omitempty"`
	// The name of the country associated with this address.
	Country *string `json:"country,omitempty"`
	// The ISO 3166-1 alpha-2 country code associated with this address.
	CountryCode string `json:"country_code"`
	// Set this to true to make this the default shipping address. There can be only one address with default set to true.
	Default *bool `json:"default,omitempty"`
	// The building door code or community gate code.
	DoorCode *string `json:"door_code,omitempty"`
	// An email address.
	Email string `json:"email"`
	// The given name of the person associated with this address.
	FirstName string `json:"first_name"`
	// The surname of the person associated with this address.
	LastName string `json:"last_name"`
	// The city name details associated with this address.
	Locality string `json:"locality"`
	// A key-value pair object that allows users to store arbitrary information associated with an object.  For any individual account object, we allow up to 50 keys. Keys can be up to 40 characters long and values can be up to 500 characters long.  Metadata should not contain any sensitive customer information, like PII (Personally Identifiable Information). For more information about metadata, see our [documentation](https://help.bolt.com/developers/references/embedded-metadata/).
	//
	Metadata *Metadata `json:"metadata,omitempty"`
	// The given and surname of the person associated with this address.
	Name *string `json:"name,omitempty"`
	// A phone number following E164 standards, in its globalized format, i.e. prepended with a plus sign.
	Phone *string `json:"phone,omitempty"`
	// The the postal or zip code associated with this address.
	PostalCode string `json:"postal_code"`
	// **Not Required for NON US addresses**. The region details such as state or province associated with this address.
	Region string `json:"region"`
	// The ISO 3166-2 region code associated with this address.
	//   - * If specified, value must be valid for the `country`.
	//   - * If null, value is inferred from the `region`.
	//
	RegionCode *string `json:"region_code,omitempty"`
	// The street number and street name of the address.
	StreetAddress1 string `json:"street_address1"`
	// Any apartment, floor, or unit details.
	StreetAddress2 *string `json:"street_address2,omitempty"`
	// Any additional street address details.
	StreetAddress3 *string `json:"street_address3,omitempty"`
	// Any additional street address details.
	StreetAddress4 *string `json:"street_address4,omitempty"`
}

func (o *AddressAccount) GetCompany() *string {
	if o == nil {
		return nil
	}
	return o.Company
}

func (o *AddressAccount) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *AddressAccount) GetCountryCode() string {
	if o == nil {
		return ""
	}
	return o.CountryCode
}

func (o *AddressAccount) GetDefault() *bool {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *AddressAccount) GetDoorCode() *string {
	if o == nil {
		return nil
	}
	return o.DoorCode
}

func (o *AddressAccount) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *AddressAccount) GetFirstName() string {
	if o == nil {
		return ""
	}
	return o.FirstName
}

func (o *AddressAccount) GetLastName() string {
	if o == nil {
		return ""
	}
	return o.LastName
}

func (o *AddressAccount) GetLocality() string {
	if o == nil {
		return ""
	}
	return o.Locality
}

func (o *AddressAccount) GetMetadata() *Metadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *AddressAccount) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AddressAccount) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *AddressAccount) GetPostalCode() string {
	if o == nil {
		return ""
	}
	return o.PostalCode
}

func (o *AddressAccount) GetRegion() string {
	if o == nil {
		return ""
	}
	return o.Region
}

func (o *AddressAccount) GetRegionCode() *string {
	if o == nil {
		return nil
	}
	return o.RegionCode
}

func (o *AddressAccount) GetStreetAddress1() string {
	if o == nil {
		return ""
	}
	return o.StreetAddress1
}

func (o *AddressAccount) GetStreetAddress2() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress2
}

func (o *AddressAccount) GetStreetAddress3() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress3
}

func (o *AddressAccount) GetStreetAddress4() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress4
}
