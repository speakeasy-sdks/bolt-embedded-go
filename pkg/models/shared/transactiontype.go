// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TransactionType - The type of transaction.
type TransactionType string

const (
	TransactionTypeCcPayment                 TransactionType = "cc_payment"
	TransactionTypeCcCredit                  TransactionType = "cc_credit"
	TransactionTypeFundingTransfer           TransactionType = "funding_transfer"
	TransactionTypeProcessingFeeTransfer     TransactionType = "processing_fee_transfer"
	TransactionTypeReserveTransfer           TransactionType = "reserve_transfer"
	TransactionTypeFloatTransfer             TransactionType = "float_transfer"
	TransactionTypeMerchantCredit            TransactionType = "merchant_credit"
	TransactionTypeMerchantDebit             TransactionType = "merchant_debit"
	TransactionTypeFundingWithdrawal         TransactionType = "funding_withdrawal"
	TransactionTypeProcessingFeeWithdrawal   TransactionType = "processing_fee_withdrawal"
	TransactionTypeZeroAmount                TransactionType = "zero_amount"
	TransactionTypeBoltFeeTransfer           TransactionType = "bolt_fee_transfer"
	TransactionTypeBoltFeeWithdrawal         TransactionType = "bolt_fee_withdrawal"
	TransactionTypeBankAccountVerification   TransactionType = "bank_account_verification"
	TransactionTypeAuthorizationVerification TransactionType = "authorization_verification"
	TransactionTypePaypalPayment             TransactionType = "paypal_payment"
	TransactionTypePaypalRefund              TransactionType = "paypal_refund"
	TransactionTypeApmPayment                TransactionType = "apm_payment"
	TransactionTypeApmRefund                 TransactionType = "apm_refund"
	TransactionTypeZeroAmountVerification    TransactionType = "zero_amount_verification"
)

func (e TransactionType) ToPointer() *TransactionType {
	return &e
}

func (e *TransactionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cc_payment":
		fallthrough
	case "cc_credit":
		fallthrough
	case "funding_transfer":
		fallthrough
	case "processing_fee_transfer":
		fallthrough
	case "reserve_transfer":
		fallthrough
	case "float_transfer":
		fallthrough
	case "merchant_credit":
		fallthrough
	case "merchant_debit":
		fallthrough
	case "funding_withdrawal":
		fallthrough
	case "processing_fee_withdrawal":
		fallthrough
	case "zero_amount":
		fallthrough
	case "bolt_fee_transfer":
		fallthrough
	case "bolt_fee_withdrawal":
		fallthrough
	case "bank_account_verification":
		fallthrough
	case "authorization_verification":
		fallthrough
	case "paypal_payment":
		fallthrough
	case "paypal_refund":
		fallthrough
	case "apm_payment":
		fallthrough
	case "apm_refund":
		fallthrough
	case "zero_amount_verification":
		*e = TransactionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactionType: %v", v)
	}
}
