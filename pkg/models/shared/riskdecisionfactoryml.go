// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RiskDecisionFactorYml - One of the main contributing factors to the fraud decision and score.
type RiskDecisionFactorYml string

const (
	RiskDecisionFactorYmlAddressDetails        RiskDecisionFactorYml = "address_details"
	RiskDecisionFactorYmlAuthDeclineStolenCard RiskDecisionFactorYml = "auth_decline_stolen_card"
	RiskDecisionFactorYmlCardInformation       RiskDecisionFactorYml = "card_information"
	RiskDecisionFactorYmlCartDetails           RiskDecisionFactorYml = "cart_details"
	RiskDecisionFactorYmlCheckoutBehavior      RiskDecisionFactorYml = "checkout_behavior"
	RiskDecisionFactorYmlDeviceSpecifications  RiskDecisionFactorYml = "device_specifications"
	RiskDecisionFactorYmlEmailDetails          RiskDecisionFactorYml = "email_details"
	RiskDecisionFactorYmlFraudulentChargeback  RiskDecisionFactorYml = "fraudulent_chargeback"
	RiskDecisionFactorYmlIPDetails             RiskDecisionFactorYml = "ip_details"
	RiskDecisionFactorYmlPhoneDetails          RiskDecisionFactorYml = "phone_details"
	RiskDecisionFactorYmlShippingDetails       RiskDecisionFactorYml = "shipping_details"
	RiskDecisionFactorYmlTooManyAttempts       RiskDecisionFactorYml = "too_many_attempts"
	RiskDecisionFactorYmlUserHistory           RiskDecisionFactorYml = "user_history"
)

func (e RiskDecisionFactorYml) ToPointer() *RiskDecisionFactorYml {
	return &e
}

func (e *RiskDecisionFactorYml) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "address_details":
		fallthrough
	case "auth_decline_stolen_card":
		fallthrough
	case "card_information":
		fallthrough
	case "cart_details":
		fallthrough
	case "checkout_behavior":
		fallthrough
	case "device_specifications":
		fallthrough
	case "email_details":
		fallthrough
	case "fraudulent_chargeback":
		fallthrough
	case "ip_details":
		fallthrough
	case "phone_details":
		fallthrough
	case "shipping_details":
		fallthrough
	case "too_many_attempts":
		fallthrough
	case "user_history":
		*e = RiskDecisionFactorYml(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RiskDecisionFactorYml: %v", v)
	}
}
