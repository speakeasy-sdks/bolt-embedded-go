// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ICartDiscountViewDiscountCategory string

const (
	ICartDiscountViewDiscountCategoryCoupon               ICartDiscountViewDiscountCategory = "coupon"
	ICartDiscountViewDiscountCategoryGiftcard             ICartDiscountViewDiscountCategory = "giftcard"
	ICartDiscountViewDiscountCategoryManagedGiftcard      ICartDiscountViewDiscountCategory = "managed_giftcard"
	ICartDiscountViewDiscountCategoryStoreCredit          ICartDiscountViewDiscountCategory = "store_credit"
	ICartDiscountViewDiscountCategoryAutomaticPromotion   ICartDiscountViewDiscountCategory = "automatic_promotion"
	ICartDiscountViewDiscountCategoryMembershipDiscount   ICartDiscountViewDiscountCategory = "membership_discount"
	ICartDiscountViewDiscountCategoryMembershipGiftcard   ICartDiscountViewDiscountCategory = "membership_giftcard"
	ICartDiscountViewDiscountCategorySubscriptionDiscount ICartDiscountViewDiscountCategory = "subscription_discount"
	ICartDiscountViewDiscountCategoryRewardsDiscount      ICartDiscountViewDiscountCategory = "rewards_discount"
	ICartDiscountViewDiscountCategoryUnknown              ICartDiscountViewDiscountCategory = "unknown"
)

func (e ICartDiscountViewDiscountCategory) ToPointer() *ICartDiscountViewDiscountCategory {
	return &e
}

func (e *ICartDiscountViewDiscountCategory) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "coupon":
		fallthrough
	case "giftcard":
		fallthrough
	case "managed_giftcard":
		fallthrough
	case "store_credit":
		fallthrough
	case "automatic_promotion":
		fallthrough
	case "membership_discount":
		fallthrough
	case "membership_giftcard":
		fallthrough
	case "subscription_discount":
		fallthrough
	case "rewards_discount":
		fallthrough
	case "unknown":
		*e = ICartDiscountViewDiscountCategory(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ICartDiscountViewDiscountCategory: %v", v)
	}
}

type ICartDiscountView struct {
	Amount *AmountView `json:"amount,omitempty"`
	// Discount code used.
	Code *string `json:"code,omitempty"`
	// Used to define the discount offering.
	Description *string `json:"description,omitempty"`
	// Used to provide a link to additional details, such as a landing page, associated with the discount offering.
	DetailsURL       *string                            `json:"details_url,omitempty"`
	DiscountCategory *ICartDiscountViewDiscountCategory `json:"discount_category,omitempty"`
	FreeShipping     *IFreeShippingDiscountView         `json:"free_shipping,omitempty"`
	// Used to define the reference ID associated with the discount available.
	Reference *string `json:"reference,omitempty"`
}

func (o *ICartDiscountView) GetAmount() *AmountView {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *ICartDiscountView) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *ICartDiscountView) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ICartDiscountView) GetDetailsURL() *string {
	if o == nil {
		return nil
	}
	return o.DetailsURL
}

func (o *ICartDiscountView) GetDiscountCategory() *ICartDiscountViewDiscountCategory {
	if o == nil {
		return nil
	}
	return o.DiscountCategory
}

func (o *ICartDiscountView) GetFreeShipping() *IFreeShippingDiscountView {
	if o == nil {
		return nil
	}
	return o.FreeShipping
}

func (o *ICartDiscountView) GetReference() *string {
	if o == nil {
		return nil
	}
	return o.Reference
}
