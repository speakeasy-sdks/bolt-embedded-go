// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/bolt-embedded-go/pkg/models/shared"
	"net/http"
)

type CaptureTransactionSecurity struct {
	XAPIKey string `security:"scheme,type=apiKey,subtype=header,name=X-API-Key"`
}

func (o *CaptureTransactionSecurity) GetXAPIKey() string {
	if o == nil {
		return ""
	}
	return o.XAPIKey
}

type CaptureTransactionRequest struct {
	// A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/).
	IdempotencyKey *string `header:"style=simple,explode=false,name=Idempotency-Key"`
	// Capture a Transaction
	CaptureTransactionWithReference *shared.CaptureTransactionWithReference `request:"mediaType=application/json"`
}

func (o *CaptureTransactionRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

func (o *CaptureTransactionRequest) GetCaptureTransactionWithReference() *shared.CaptureTransactionWithReference {
	if o == nil {
		return nil
	}
	return o.CaptureTransactionWithReference
}

type CaptureTransactionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Capture Successful
	TransactionView *shared.TransactionView
}

func (o *CaptureTransactionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CaptureTransactionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CaptureTransactionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CaptureTransactionResponse) GetTransactionView() *shared.TransactionView {
	if o == nil {
		return nil
	}
	return o.TransactionView
}
