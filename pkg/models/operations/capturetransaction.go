// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/bolt-embedded-go/pkg/models/shared"
	"net/http"
)

type CaptureTransactionSecurity struct {
	XAPIKey string `security:"scheme,type=apiKey,subtype=header,name=X-API-Key"`
}

func (o *CaptureTransactionSecurity) GetXAPIKey() string {
	if o == nil {
		return ""
	}
	return o.XAPIKey
}

type CaptureTransactionRequest struct {
	// A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/).
	IdempotencyKey *string `header:"style=simple,explode=false,name=Idempotency-Key"`
	// Capture a Transaction
	CaptureTransactionWithReference *shared.CaptureTransactionWithReference `request:"mediaType=application/json"`
}

func (o *CaptureTransactionRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

func (o *CaptureTransactionRequest) GetCaptureTransactionWithReference() *shared.CaptureTransactionWithReference {
	if o == nil {
		return nil
	}
	return o.CaptureTransactionWithReference
}

type CaptureTransaction422ApplicationJSONErrors struct {
	Code    *float64 `json:"code,omitempty"`
	Field   *string  `json:"field,omitempty"`
	Message *string  `json:"message,omitempty"`
}

func (o *CaptureTransaction422ApplicationJSONErrors) GetCode() *float64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *CaptureTransaction422ApplicationJSONErrors) GetField() *string {
	if o == nil {
		return nil
	}
	return o.Field
}

func (o *CaptureTransaction422ApplicationJSONErrors) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

type CaptureTransaction422ApplicationJSONResult struct {
}

// CaptureTransaction422ApplicationJSON - Unprocessable Entity
type CaptureTransaction422ApplicationJSON struct {
	Errors []CaptureTransaction422ApplicationJSONErrors `json:"errors,omitempty"`
	Result *CaptureTransaction422ApplicationJSONResult  `json:"result,omitempty"`
}

func (o *CaptureTransaction422ApplicationJSON) GetErrors() []CaptureTransaction422ApplicationJSONErrors {
	if o == nil {
		return nil
	}
	return o.Errors
}

func (o *CaptureTransaction422ApplicationJSON) GetResult() *CaptureTransaction422ApplicationJSONResult {
	if o == nil {
		return nil
	}
	return o.Result
}

type CaptureTransactionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Unprocessable Entity
	CaptureTransaction422ApplicationJSONObject *CaptureTransaction422ApplicationJSON
	// Generic Error Schema
	ErrorsBoltAPIResponse *shared.ErrorsBoltAPIResponse
	// Capture Successful
	TransactionView *shared.TransactionView
}

func (o *CaptureTransactionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CaptureTransactionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CaptureTransactionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CaptureTransactionResponse) GetCaptureTransaction422ApplicationJSONObject() *CaptureTransaction422ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.CaptureTransaction422ApplicationJSONObject
}

func (o *CaptureTransactionResponse) GetErrorsBoltAPIResponse() *shared.ErrorsBoltAPIResponse {
	if o == nil {
		return nil
	}
	return o.ErrorsBoltAPIResponse
}

func (o *CaptureTransactionResponse) GetTransactionView() *shared.TransactionView {
	if o == nil {
		return nil
	}
	return o.TransactionView
}
