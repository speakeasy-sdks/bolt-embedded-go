// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetTestCreditCardTokenSecurity struct {
	XAPIKey string `security:"scheme,type=apiKey,subtype=header,name=X-API-Key"`
}

func (o *GetTestCreditCardTokenSecurity) GetXAPIKey() string {
	if o == nil {
		return ""
	}
	return o.XAPIKey
}

// GetTestCreditCardToken200ApplicationJSON - Successfully Fetched Credit Card Token
type GetTestCreditCardToken200ApplicationJSON struct {
	// The credit card bin.
	Bin *string `json:"bin,omitempty"`
	// The date at which the token expires. A token must be used within 15 minutes of creation.
	Expiry *int64 `json:"expiry,omitempty"`
	// The last 4 digits of the card number.
	Last4 *string `json:"last4,omitempty"`
	// The credit card network.
	Network *string `json:"network,omitempty"`
	// The newly generated credit card token.
	Token *string `json:"token,omitempty"`
}

func (o *GetTestCreditCardToken200ApplicationJSON) GetBin() *string {
	if o == nil {
		return nil
	}
	return o.Bin
}

func (o *GetTestCreditCardToken200ApplicationJSON) GetExpiry() *int64 {
	if o == nil {
		return nil
	}
	return o.Expiry
}

func (o *GetTestCreditCardToken200ApplicationJSON) GetLast4() *string {
	if o == nil {
		return nil
	}
	return o.Last4
}

func (o *GetTestCreditCardToken200ApplicationJSON) GetNetwork() *string {
	if o == nil {
		return nil
	}
	return o.Network
}

func (o *GetTestCreditCardToken200ApplicationJSON) GetToken() *string {
	if o == nil {
		return nil
	}
	return o.Token
}

type GetTestCreditCardTokenResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successfully Fetched Credit Card Token
	GetTestCreditCardToken200ApplicationJSONObject *GetTestCreditCardToken200ApplicationJSON
}

func (o *GetTestCreditCardTokenResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetTestCreditCardTokenResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetTestCreditCardTokenResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetTestCreditCardTokenResponse) GetGetTestCreditCardToken200ApplicationJSONObject() *GetTestCreditCardToken200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.GetTestCreditCardToken200ApplicationJSONObject
}
