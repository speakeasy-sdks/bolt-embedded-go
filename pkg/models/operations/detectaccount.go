// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/bolt-embedded-go/pkg/models/shared"
	"net/http"
)

type DetectAccountRequest struct {
	// The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard.
	XPublishableKey string `header:"style=simple,explode=false,name=X-Publishable-Key"`
	// The shopper's email address is the primary mechanism for detecting an account. You **must** provide either a value for this parameter or for `sha256_email`.
	Email *string `queryParam:"style=form,explode=true,name=email"`
	// The shopper's phone number. Includes country code (e.g. +1); does not include dashes or spaces. Can be used to detect an account instead of `sha256_email` or `email`.
	Phone *string `queryParam:"style=form,explode=true,name=phone"`
	// The sha256 hash of the shopper's normalized email address can be used to detect an account instead of `email`.
	Sha256Email *string `queryParam:"style=form,explode=true,name=sha256_email"`
}

func (o *DetectAccountRequest) GetXPublishableKey() string {
	if o == nil {
		return ""
	}
	return o.XPublishableKey
}

func (o *DetectAccountRequest) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *DetectAccountRequest) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *DetectAccountRequest) GetSha256Email() *string {
	if o == nil {
		return nil
	}
	return o.Sha256Email
}

type DetectAccountResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Has Bolt Account
	V1AccountsView *shared.V1AccountsView
}

func (o *DetectAccountResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DetectAccountResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DetectAccountResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DetectAccountResponse) GetV1AccountsView() *shared.V1AccountsView {
	if o == nil {
		return nil
	}
	return o.V1AccountsView
}
